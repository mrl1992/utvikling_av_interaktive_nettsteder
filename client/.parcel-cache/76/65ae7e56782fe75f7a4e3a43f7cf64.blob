"use strict";
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _propTypes = _interopRequireDefault(require("prop-types"));
var _styledComponents = _interopRequireDefault(require("styled-components"));
var _fi = require("react-icons/fi");
var _bi = require("react-icons/bi");
var _Search = _interopRequireDefault(require("./Search"));
var _Styles = require("../styles/Styles");
var _jsxRuntime = require("react/jsx-runtime");
var StyledSearchbar = _styledComponents["default"].section.withConfig({
  displayName: "Searchbar__StyledSearchbar",
  componentId: "rtky60-0"
})(["padding-top:0;display:grid;grid-template-columns:0.5fr 3fr 0.5fr;gap:20px;margin-bottom:40px;"]);
_c = StyledSearchbar;
var ToggleButton = (0, _styledComponents["default"])(_Styles.Button).withConfig({
  displayName: "Searchbar__ToggleButton",
  componentId: "rtky60-1"
})(["line-height:40px;width:40px;height:40px;font-size:20px;align-self:center;justify-self:center;margin-right:4px;border-radius:5px;"]);
_c2 = ToggleButton;
var Searchbar = function Searchbar(_ref) {
  var change = _ref.change, search = _ref.search, setSearch = _ref.setSearch, sortorder = _ref.sortorder, viewtype = _ref.viewtype, toggleSort = _ref.toggleSort, toggleView = _ref.toggleView;
  return (
    /*#__PURE__*/(0, _jsxRuntime.jsx)(_jsxRuntime.Fragment, {
      children: /*#__PURE__*/(0, _jsxRuntime.jsxs)(StyledSearchbar, {
        children: [/*#__PURE__*/(0, _jsxRuntime.jsx)("div", {}), /*#__PURE__*/(0, _jsxRuntime.jsx)(_Search["default"], {
          search: search,
          setSearch: setSearch
        }), /*#__PURE__*/(0, _jsxRuntime.jsxs)("section", {
          children: [/*#__PURE__*/(0, _jsxRuntime.jsx)(ToggleButton, {
            type: "button",
            onClick: toggleView,
            title: ("Bytt til ").concat(change),
            children: viewtype === 'gridview' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_fi.FiList, {}) : /*#__PURE__*/(0, _jsxRuntime.jsx)(_fi.FiGrid, {})
          }), /*#__PURE__*/(0, _jsxRuntime.jsx)(ToggleButton, {
            type: "button",
            onClick: toggleSort,
            title: ("Sorter ").concat(sortorder),
            children: sortorder === 'desc' ? /*#__PURE__*/(0, _jsxRuntime.jsx)(_bi.BiSortUp, {}) : /*#__PURE__*/(0, _jsxRuntime.jsx)(_bi.BiSortDown, {})
          })]
        })]
      })
    })
  );
};
_c3 = Searchbar;
Searchbar.propTypes = {
  change: _propTypes["default"].string,
  search: _propTypes["default"].string,
  setSearch: _propTypes["default"].func,
  sortorder: _propTypes["default"].string,
  toggleSort: _propTypes["default"].func,
  toggleView: _propTypes["default"].func,
  viewtype: _propTypes["default"].string
};
var _default = Searchbar;
exports["default"] = _default;
var _c, _c2, _c3;
$RefreshReg$(_c, "StyledSearchbar");
$RefreshReg$(_c2, "ToggleButton");
$RefreshReg$(_c3, "Searchbar");
